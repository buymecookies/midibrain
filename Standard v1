/** 
 * This is an example that demonstrates the use of MIDI Note Buttons that can be
 * used for triggering samples, mute/solo/rec buttons, play/pause/stop buttons, 
 * etc. It can control almost any push button control in your DAW software.
 *
 * @boards  AVR, AVR USB, Nano Every, Due, Nano 33 IoT, Nano 33 BLE, UNO R4, Pi Pico, Teensy 3.x, ESP32, ESP8266
 *
 * Note numbers use the [Scientific Pitch Notation system](https://en.wikipedia.org/wiki/Scientific_pitch_notation),
 * where <b>A<sub>4</sub></b> is 440 Hz, and <b>C<sub>-1</sub></b> is 8.1758 Hz.
 * See @ref MIDI_Notes for a table of MIDI note numbers.
 * 
 * Mapping
 * -------
 * 
 * Select the Arduino as a custom MIDI controller in your DAW, and use the 
 * MIDI learn option to assign the button to a function.
 * 
 * Written by PieterP, 2019-08-07  
 * https://github.com/tttapa/Control-Surface
 */

#include <Control_Surface.h> // Include the Control Surface library

// Instantiate a MIDI over USB interface.
USBMIDI_Interface midi;


// Instantiate a NoteButton object

// connector 3
CCAbsoluteEncoder enc {
  {2, 3},       // pins
  MIDI_CC::Pan, // MIDI address (CC number + optional channel)
  1,            // optional multiplier if the control isn't fast enough
};

// wireless remote
NoteButton remote1 {
  14,                             // Push button on pin 14
  {MIDI_Notes::A[1], Channel_1}, // Note a1 on MIDI channel 1
};

NoteButton remote2 {
  10,                             // Push button on pin 10
  {MIDI_Notes::A[2], Channel_1}, // Note a2 on MIDI channel 1
};

NoteButton remote3 {
  15,                             // Push button on pin 15
  {MIDI_Notes::A[3], Channel_1}, // Note a3 on MIDI channel 1
};

NoteButton remote4 {
  16,                             // Push button on pin 16
  {MIDI_Notes::A[4], Channel_1}, // Note a4 on MIDI channel 1
};

//connector 1

NoteButton con1  {
  0,                             // Push button on pin 0
  {MIDI_Notes::B[1], Channel_1}, // Note b1 on MIDI channel 1
};

NoteButton con2 {
  1,                             // Push button on pin 1
  {MIDI_Notes::B[2], Channel_1}, // Note b2 on MIDI channel 1
};

//connector 2

CCPotentiometer potentiometers[] {
  {A0,        // Analog pin connected to potentiometer A0
   0x1},     // Controller number of the first potentiometer
  {A1,        // Analog pin connected to potentiometer A1
   0x10},     // Controller number of the second potentiometer
};

void setup() {
  Control_Surface.begin(); // Initialize Control Surface
}

void loop() {
  Control_Surface.loop(); // Update the Control Surface
}
